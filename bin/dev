#!/usr/bin/env bash

[ ! -z "$DEBUG" ] && set -x

DIR="$(cd "$(dirname "$0")" && pwd)"
DOTDIR="$HOME/.living-in-a-box"

if [[ "$OSTYPE" == darwin* ]]; then
  VAGRANT="vagrant"
  export VAGRANT_DOTFILE_PATH="$DOTDIR/.vagrant"
  export VAGRANT_VAGRANTFILE="$DIR/../docker/Vagrantfile"
  export DOCKER_HOST=localhost
fi

port_arguments() {
  local ports=""
  for port in "$@"; do
    ports+="-p $port "
  done
  echo $ports
}

run_image() {
  local name=$1
  local ports=$(port_arguments "${@:2}")
  local id=$(docker run \
    -d \
    -volumes-from ${name}_data \
    -name $name \
    $ports \
    gewo/$name)
  echo "Started $name in container $id"
}

start_image() {
  local name=$1
  docker run -v /data -v /logs -name ${name}_data busybox true
  run_image $@
}

link_arguments() {
  local links=""
  for service in redis mongodb mysql; do
    links+="-link $service:$service "
  done
  echo $links
}

start_services() {
  start_image redis 6379
  start_image mongodb 27017 28017
  start_image mysql 3306
}

start_vagrant() {
  if [ ! -z "$VAGRANT" ]; then
    if ! $VAGRANT status | grep running; then
      $VAGRANT up
    fi
  fi
}

start() {
  start_vagrant
  start_services
}

stop() {
  local running=$(docker ps -q)
  if [ "$running" != "" ]; then
    docker stop $running
    docker rm $running
  fi
}

shell() {
  local links=$(link_arguments)
  local image="gewo/rails"
  local mnt="$PWD"

  if [ ! -z "$VAGRANT" ]; then
    mnt="/vagrant"
  fi

  if [ "$1" != "" ]; then
    image="$1"
  fi

  local id=$(docker run \
    -d \
    -i -t \
    -v "$mnt":/mnt \
    -p 3000 \
    $links \
    $image \
    /bin/bash)
  local port=$(docker port $id 3000)
  echo "port 3000 forwarded to ${port}"
  docker attach $id
}

build_images() {
  $DIR/build_images
}

usage() {
  echo "$0 [start,stop,shell,build_images,vagrant,docker]"
  exit 1
}

cmd="$1"
shift

case "$cmd" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  shell)
    shell ${@}
    ;;
  build_images)
    build_images
    ;;
  vagrant)
    [ ! -z "$VAGRANT" ] && vagrant ${@}
    ;;
  docker)
    docker ${@}
    ;;
  *)
    usage
    ;;
esac
